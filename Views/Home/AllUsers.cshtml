@model IEnumerable<MaterialGatePassTacker.Models.D_User>
@using System.Collections.Generic

@{
    ViewBag.Title = "AllUsers";
}


<html>
<head>
        <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>


 <style>
/* register global css variables */
:root {
  --modal-spacing: 1rem;
  --modal-anim-duration: .3s;
}


/* this will hide checkbox */
.modal-toggle-checkbox {
  appearance: none;
}

/* if checkbox is checked, show modal container */
.modal-toggle-checkbox:checked + .ibs-full-modal-container {
  visibility: visible;
  /*background-color: rgba(0, 0, 0, .5); */
}

/* 
  show modal content 
  update this part to add animations  
*/
.modal-toggle-checkbox:checked + .ibs-full-modal-container .ibs-full-modal {
  opacity: 1;
  transform: translateX(0);
}

/* temporary code. seems like you using BS or something, so this up to you */




.modal-toggle-label {
  display: inline-flex;
  border: 1px solid;
  padding: .25rem;
  border-radius: .25rem;
  cursor: pointer;
}
/* end of temporary code */

/* .ibs-backdrop not used here, can be removed */
/*.ibs-backdrop,*/
.ibs-full-modal-container {
  position: fixed;
 top: 26px;
    left: 353px;
   width: 792px;
    height: 541px;
  z-index: 1;
  background-color: transparent;
  visibility: hidden; /* animating container visibility */
  transition: visibility calc(var(--modal-anim-duration) + .05s) ease, background-color var(--modal-anim-duration) ease; /* animating container visibility and background */
}

/*.ibs-full-modal-container {
  background-color: transparent;
}*/

.ibs-full-modal {
  position: absolute;
  top: var(--modal-spacing);
  left: var(--modal-spacing);
  height: calc(100% - var(--modal-spacing) * 2);
  width: calc(100% - var(--modal-spacing) * 2);
  /*-webkit-transform: translateX(30%);
  -moz-transform: translateX(30%);
  -ms-transform: translateX(30%);
  -o-transform: translateX(30%);*/
  transform: translateX(30%);
  opacity: 0; /* animating modal visibility with position */
  transition: opacity var(--modal-anim-duration) ease, transform var(--modal-anim-duration) ease; /* animating modal visibility with position */
} 

.ibs-full-modal * {
  /*-webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;*/
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

.ibs-full-modal>.ibs-modal-body,
.ibs-full-modal>.ibs-modal-footer,
.ibs-full-modal>.ibs-modal-header {
  padding: 15px 20px;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 56px;
  background-color: #eee;
  border-bottom: 1px solid #ccc;
}

.ibs-full-modal>.ibs-modal-body {
  height: 375px;
  padding: 20px;
  right: 0;
  bottom: 0;
  background-color: #fff;
  overflow-x: hidden;
  overflow-y: auto;
  border: none;
}

.ibs-full-modal>.ibs-modal-body.has-header {
  top: 56px;
}

.ibs-full-modal>.ibs-modal-body.has-footer {
  bottom: 56px;
}

.ibs-full-modal>.ibs-modal-footer {
  top: auto;
  bottom: 0;
  height: 56px;
  text-align: right;
  border-top: 1px solid #ccc;
  padding: 10px 20px;
}

.ibs-full-modal .ibs-modal-title {
  padding: 5px 0;
  font-size: 18px;
  font-weight: 700;
  float: left;
}

.ibs-full-modal .ibs-btn-close {
  font-size: 30px;
  float: right;
  line-height: 30px;
  text-align: center;
  height: 30px;
  width: 30px;
  -webkit-border-radius: 50%;
  border-radius: 50%;
  -webkit-transition: all 0.3s;
  -o-transition: all 0.3s;
  -moz-transition: all 0.3s;
  transition: all 0.3s;
}

.ibs-full-modal .ibs-btn-close:hover {
  background-color: #6495ed;
  color: #fff;
  cursor: pointer;
  -webkit-transform: rotate(180deg);
  -moz-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  -o-transform: rotate(180deg);
  transform: rotate(180deg);
}


body.full-modal-open {
  overflow: hidden;
}
</style>
    <style>
        .btncc{
            width: 174px;
            margin-top: 55px;
            padding: 10px !important;
            margin-left: -49px;
        }
        .btnnew {
            width: 224px !important;
            margin-top: -162px;
            margin-left: 638px;
            background: #007bff;
        }

        .fixed-table-toolbar .columns-right {
            display: none !important;
        }

        .b {
            display: none;
        }

        .btnsuccm {
          <!--  width: 74px;-->
            width: 62px !important;
            margin-left: 730px;
            height: 30px;
        }
        .btnerr{
            margin-left: 796px;
            height: 30px;
            width: 62px;
        }
        
        .fixed-table-toolbar .bars, .fixed-table-toolbar .columns, .fixed-table-toolbar .search {
           
            position: relative;
            margin-bottom: -35px;
            line-height: 34px;
            float: right;
        }

        .page-list {
            display: none !important;
        }

        thead {
            background: #a6bfc5;
        }

        .pagination {
            margin-top: -22px !important;
            float: right !important;
        }
       
    </style>

    <!--For Datatables css start-->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.10.0/bootstrap-table.min.css" />
    <link rel="stylesheet" href="https://rawgit.com/vitalets/x-editable/master/dist/bootstrap3-editable/css/bootstrap-editable.css" />
    <!--For Datatables css END-->
    <!--<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">-->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
</head>
<body>
    @Html.Partial("Sidebar");
    <section id="content">

            <button class = "btn btn-default btn-primary btncc" onclick="document.getElementById('id01').style.display='block',RoleListData(event)">Create New User</button>


        <div class="row">

           <div id="id01" class="w3-modal">
    <div class="w3-modal-content" style="width:800px;height: 500px;    margin-top: -70px;
">
        <div class="w3-container">
            <span onclick="document.getElementById('id01').style.display='none'" class="w3-button w3-display-topright">&times;</span>
            <h4>Add User</h4>


                @Html.Partial("AddUser", new MaterialGatePassTacker.Models.D_UserViewModel())

                
            </div>
    </div>
</div>

          
            @using (Html.BeginForm(FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                                <div class="header_wrap" style="width: 400px;
    margin-left: 506px;">
            <div class="num_rows">

                <div class="form-group" style="width:40%;    margin-bottom: -44px !important;">
                    <select class="form-control" name="state" id="maxRows">


                        <option value="5">5</option>
                        <option value="10">10</option>
                        <option value="15">15</option>
                        <option value="20">20</option>
                        <option value="50">50</option>
                        <option value="70">70</option>
                        <option value="100">100</option>
                        <option value="5000">Show ALL Rows</option>
                    </select>

                </div>
            </div>
          
        </div>

                <table id="table"
                       data-toggle="table"
                       data-search="true"
                       data-filter-control="true"
                       data-toolbar="#toolbar"
                       class="table-responsive">
                    <thead>
                        <tr>
                            <!--- <th data-field="state" data-checkbox="true"></th>-->

                            <th data-sortable="true">
                                @Html.DisplayNameFor(model => model.User_Name)
                            </th>
                            <th data-sortable="true">
                                @Html.DisplayNameFor(model =>  model.Email_ID)
                            </th>
                            <th data-sortable="true">
                                @Html.DisplayNameFor(model =>  model.Mobile_No)
                            </th>
                            <th data-sortable="true">
                                @Html.DisplayNameFor(model =>  model.IsActive)
                            </th>
                            <th data-sortable="true">
                                @Html.DisplayNameFor(model =>  model.Action)
                            </th>

                           
                           
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var item in  Model)
                        {
                            @Html.HiddenFor(model => item.UID)
                            <tr>
                               
                                <td>
                                    @Html.DisplayFor(modelItem => item.User_Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Email_ID)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Mobile_No)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.IsActive)
                                </td>
                               

                               
                                <td>
                              <!-- <button class = "btn btn-default btn-success btnsuccm btn btn-primary btn-lg modal-toggle-label" id="@item.UID"
                               style="color: #fff;
    padding: 3px;
    width: 63px;" type="submit" for="openModal">Edit</button>-->


                                 <!--<label class="btn btn-default btn-success btnsuccm btn btn-primary btn-lg modal-toggle-label" style="color: #fff;
    padding: 3px;
    width: 63px;" id="@item.UID" type="submit" for="openModal">Edit</label>-->

                                   <button type="submit" onclick="EditdataGet('@item.UID',event)" id="@item.UID" style="font-size: 16px;
width: 63px;
    padding: 5px;" class="btn btn-default btn-success btnsuccm btn btn-primary btn-lg modal-toggle-label nm" data-toggle="modal" data-target="#myModal">Edit</button>


                                    <!--Html.ActionLink("Edit", "EditUser", new { id = item.UID }, htmlAttributes: new { class = "btn btn-default btn-success btnsuccm btn btn-primary btn-lg modal-toggle-label"})
                                    -->

                                    @Html.ActionLink("Delete", "DeleteUser", new { id = item.UID }, new { onclick = "return confirm('Are sure wants to delete?');", @class = "btn btn-default btn-danger btnerr" })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <!--Start Pagination -->
        <div class='pagination-container'>
            <nav style="background: none;">
                <ul class="pagination" style="background: none;
    margin-top: 118px !important;
    margin-left: 728px;">
                </ul>
            </nav>
        </div>
        <div class="rows_count" style="margin-top:20px"></div>

            }



             <!-- Modal -->
  <div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
    
      <!-- Modal content-->
      <div class="modal-content">
        <div class="modal-header">
          <h4 class="modal-title" style="width: 80px;    margin-left: -150px;
">Edit User</h4>
          <button type="button" class="close" style="    margin-right: -362px;" data-dismiss="modal">&times;</button>

        </div>
        <div class="modal-body" style="height: 487px;">
         @Html.Partial("EditUser", new MaterialGatePassTacker.Models.D_UserViewModel())

        </div>
        <!--<div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>-->
      </div>
      
    </div>
  </div>





           <!-- <div class="modal-toggle-wrapper">
  
  <input class="modal-toggle-checkbox" type="checkbox" id="openModal">
  <div class="ibs-full-modal-container">
    <div class="ibs-full-modal">
      <header class="ibs-modal-header">
        <h4 class="ibs-modal-title">Edit User</h4>

        <label for="openModal">
          <span class="ibs-btn-close">&times;</span>
        </label>

      </header>
      <div class="ibs-modal-body has-header has-footer">


      </div>
     
    </div>
  </div>
</div>-->
        </div>
    </section>



    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-table@1.23.2/dist/bootstrap-table.min.js"></script>

    <!--<script src="~/js/bootstrap-table.js"></script>-->
    <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.10.0/bootstrap-table.js"></script>-->

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.9.1/extensions/editable/bootstrap-table-editable.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.9.1/extensions/export/bootstrap-table-export.js"></script>
    <script src="https://rawgit.com/hhurz/tableExport.jquery.plugin/master/tableExport.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.9.1/extensions/filter-control/bootstrap-table-filter-control.js"></script>


    <script>
         $(document).ready(function () {
         RoleListData();
             });



           
    </script>
    <script>
        //exporte les données sélectionnées
        var $table = $('#table');
        $(function () {
            $('#toolbar').find('select').change(function () {
                $table.bootstrapTable('refreshOptions', {
                    exportDataType: $(this).val()
                });
            });
        })

        var trBoldBlue = $("table");


        $(trBoldBlue).on("click", "tr", function () {
            $(this).toggleClass("bold-blue");
        });

    </script>




    <script>



        getPagination('#table');
        $('#maxRows').trigger('change');
        function getPagination(table) {
            // alert("mona");
            $('#maxRows').on('change', function () {
                $('.pagination').html('');						// reset pagination div
                var trnum = 0;									// reset tr counter
                var maxRows = parseInt($(this).val());			// get Max Rows from select option

                var totalRows = $(table + ' tbody tr').length;		// numbers of rows
                $(table + ' tr:gt(0)').each(function () {			// each TR in  table and not the header
                    trnum++;									// Start Counter
                    if (trnum > maxRows) {						// if tr number gt maxRows

                        $(this).hide();							// fade it out
                    } if (trnum <= maxRows) { $(this).show(); }// else fade in Important in case if it ..
                });											//  was fade out to fade it in
                if (totalRows > maxRows) {						// if tr total rows gt max rows option
                    var pagenum = Math.ceil(totalRows / maxRows);	// ceil total(rows/maxrows) to get ..
                    //	numbers of pages
                    for (var i = 1; i <= pagenum;) {			// for each page append pagination li
                        $('.pagination').append('<li data-page="' + i + '">\
                                                              <span>'+ i++ + '<span class="sr-only">(current)</span></span>\
                                                            </li>').show();
                    }											// end for i


                } 												// end if row count > max rows
                $('.pagination li:first-child').addClass('active'); // add active class to the first li


                //SHOWING ROWS NUMBER OUT OF TOTAL DEFAULT
                showig_rows_count(maxRows, 1, totalRows);
                //SHOWING ROWS NUMBER OUT OF TOTAL DEFAULT

                $('.pagination li').on('click', function (e) {		// on click each page
                    e.preventDefault();
                    var pageNum = $(this).attr('data-page');	// get it's number
                    var trIndex = 0;							// reset tr counter
                    $('.pagination li').removeClass('active');	// remove active class from all li
                    $(this).addClass('active');					// add active class to the clicked


                    //SHOWING ROWS NUMBER OUT OF TOTAL
                    showig_rows_count(maxRows, pageNum, totalRows);
                    //SHOWING ROWS NUMBER OUT OF TOTAL



                    $(table + ' tr:gt(0)').each(function () {		// each tr in table not the header
                        trIndex++;								// tr index counter
                        // if tr index gt maxRows*pageNum or lt maxRows*pageNum-maxRows fade if out
                        if (trIndex > (maxRows * pageNum) || trIndex <= ((maxRows * pageNum) - maxRows)) {
                            $(this).hide();
                        } else { $(this).show(); } 				//else fade in
                    }); 										// end of for each tr in table
                });										// end of on click pagination list
            });
            // end of on select change

            // END OF PAGINATION

        }




        // SI SETTING
        $(function () {
            // Just to append id number for each row
            default_index();

        });

        //ROWS SHOWING FUNCTION
        function showig_rows_count(maxRows, pageNum, totalRows) {
            //Default rows showing
            var end_index = maxRows * pageNum;
            var start_index = ((maxRows * pageNum) - maxRows) + parseFloat(1);
            var string = 'Showing ' + start_index + ' to ' + end_index + ' of ' + totalRows + ' entries';
            $('.rows_count').html(string);
        }

        // CREATING INDEX
        function default_index() {
            $('table tr:eq(0)').prepend('<th> ID </th>')

            var id = 0;

            $('table tr:gt(0)').each(function () {
                id++
                $(this).prepend('<td>' + id + '</td>');
            });
        }


        function EditdataGet(value ,event) {
          event.preventDefault(); // no auto refresh.
         // alert(value);
          var id = value;

       // alert(id);
       
            $.ajax({
                type: "POST",
                url: "/Home/EditUserData",
                data: {
                    ID: id
                },
                dataType: "text",
                success: function (response) {
                   // alert(response);
                    if (response == null || response.length == 0) {
                        return;
                    }
                    var newJ = $.parseJSON(response);

                   // alert(newJ);

                    

                    document.getElementById("d_user1_UID").value = JSON.parse(JSON.stringify(newJ.d_user1.uid));
                    document.getElementById("d_user1_User_Name").value = JSON.parse(JSON.stringify(newJ.d_user1.user_Name));

                    document.getElementById("d_user1_Password").value = JSON.parse(JSON.stringify(newJ.d_user1.password));
                    document.getElementById("d_user1_Email_ID").value = JSON.parse(JSON.stringify(newJ.d_user1.email_ID));
                    document.getElementById("d_user1_Mobile_No").value = JSON.parse(JSON.stringify(newJ.d_user1.mobile_No));
                    document.getElementById("d_user1_IsActive").checked = JSON.parse(JSON.stringify(newJ.d_user1.isActive));
                    
                    document.getElementById("d_user1_RID").value = JSON.parse(JSON.stringify(newJ.d_user1.rid));
                    var RoleList = JSON.stringify(newJ.rolelist);
                    list = RoleList;
                    PopulateDropDown("#d_user1_RID", list);
                }
            });

        }

        function RoleListData(event) {
            event.preventDefault(); // no auto refresh.

            $.ajax({
                type: "POST",
                url: "/Home/RoleList",
                data: {
                    // ID: id
                },
                dataType: "text",
                success: function (response) {
                    //alert(response);
                    var list;

                    if (response == null || response.length == 0) {
                        return;
                    }
                    var newJ = $.parseJSON(response);
                    var RoleList = JSON.stringify(newJ.rolelist);
                    list = RoleList;
                    PopulateDropDown("#d_user_RID", list);


                }
            });
        }


        function PopulateDropDown(dropDownId, list) {
            //alert(dropDownId);
            //alert(list);

            var newJJ = $.parseJSON(list);
            //alert(newJJ);

            if (newJJ != null && newJJ.length > 0) {
                // $(dropDownId).removeAttr("disabled");
                // $(dropDownId).removeAttr("group");
                // $(dropDownId).removeAttr("selected");


                $.each(newJJ, function () {
                    // alert('m0nika');
                    $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));


                });

            }
        }


    </script>


</body>

</html>

